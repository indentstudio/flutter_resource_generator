import 'package:flutter_resource_generator/options.dart';
import 'package:path/path.dart';
import 'package:recase/recase.dart';

class Template {
  Template();

  String license = '''
/// Generated by the [resource_generator] library.
/// PLEASE DO NOT EDIT MANUALLY.
// ignore_for_file: constant_identifier_names\n
''';

  String classDeclare(String className) {
    final String pascalCase = ReCase(className).pascalCase;
    return '''
class $pascalCase {\n
  const $pascalCase._();\n
''';
  }

  String get classDeclareFooter => '}\n';

  String imageAsset(
      String imagePath, String relativePath, bool isPreview, Options? options) {
    String text = '';
    if (isPreview) {
      text += '''
  /// ![preview](file://${_formatPreviewName(imagePath)})
''';
    }
    text += '''
        String get ${_formatFiledName(imagePath, options)} => '$relativePath';\n
      ''';
    return text;
  }

  String imageGroup(String name) {
    final ReCase reCase = ReCase(name);
    return '''
        
    static const ${reCase.pascalCase} ${reCase.camelCase} = ${reCase.pascalCase}._();\n
''';
  }

  String _formatPreviewName(String path) {
    return path.replaceAll(' ', '%20');
  }

  String _formatFiledName(String imagePath, Options? options) {
    final String fileName = split(imagePath).last.split('.')[0];
    final String renamed = options?.rename(fileName) ?? fileName;
    return ReCase(renamed).camelCase;
  }
}
